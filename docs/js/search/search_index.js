var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.2","fields":["title","body"],"fieldVectors":[["title/injectables/AuthService.html",[0,1.042,1,1.042]],["body/injectables/AuthService.html",[0,1.129,1,0.754,2,0.27,3,0.27,4,0.213,5,1.027,6,0.213,7,0.496,8,2.179,9,2.414,10,2.414,11,1.536,12,1.536,13,3.299,14,0.508,15,1.129,16,1.129,17,0.942,18,2.754,19,2.174,20,0.754,21,1.815,22,1.501,23,0.951,24,1.84,25,1.129,26,0.061,27,0.597,28,0.476,29,0.97,30,1.462,31,1.815,32,1.097,33,1.84,34,2.584,35,1.008,36,1.106,37,1.84,38,2.414,39,1.574,40,1.574,41,1.184,42,1.815,43,1.84,44,0.382,45,1.841,46,1.84,47,0.556,48,1.84,49,1.84,50,2.414,51,1.84,52,1.84,53,1.84,54,0.794,55,1.027,56,1.815,57,1.213,58,1.162,59,1.213,60,0.754,61,0.24,62,0.556,63,1.314,64,0.648,65,0.135,66,2.174,67,0.708,68,1.213,69,1.213,70,1.027,71,1.213,72,1.213,73,1.213,74,1.213,75,1.213,76,1.815,77,1.213,78,2.414,79,2.584,80,0.942,81,2.414,82,2.174,83,2.414,84,1.129,85,1.129,86,2.174,87,1.815,88,1.213,89,1.815,90,2.174,91,1.213,92,1.815,93,1.815,94,1.213,95,0.754,96,0.031,97,0.031]],["title/classes/AuthServiceConfig.html",[22,1.042,65,0.187]],["body/classes/AuthServiceConfig.html",[0,0.851,2,0.305,3,0.305,4,0.24,5,1.158,6,0.24,7,0.543,8,1.436,9,1.368,10,1.368,14,0.526,17,0.534,19,1.368,20,0.851,21,1.368,22,1.451,23,0.768,25,0.851,26,0.061,27,0.45,28,0.41,29,0.731,31,1.368,32,0.91,34,2.558,35,0.91,36,0.909,38,1.983,39,0.99,40,0.99,41,1.244,42,1.368,44,0.374,45,1.679,50,2.716,54,0.842,55,1.158,56,1.983,57,1.368,58,1.247,59,1.368,60,0.851,61,0.262,62,0.627,63,1.852,64,0.731,65,0.221,66,2.992,67,1.105,68,1.983,69,1.368,70,1.158,71,1.368,72,1.368,73,1.368,74,1.368,75,1.368,76,1.983,77,1.368,78,2.558,79,2.716,80,0.998,81,2.558,82,2.333,83,2.558,84,1.233,85,1.233,86,2.333,87,1.983,88,1.368,89,1.983,90,2.333,91,1.368,92,1.983,93,1.983,94,1.368,95,0.851,96,0.034,97,0.034,98,3.009,99,2.076]],["title/interfaces/AuthServiceConfigItem.html",[62,0.768,63,1.213]],["body/interfaces/AuthServiceConfigItem.html",[0,0.892,2,0.319,3,0.319,4,0.252,5,1.214,6,0.252,7,0.561,8,1.486,9,1.435,10,1.435,14,0.521,17,0.56,19,1.435,21,1.435,22,1.276,26,0.061,28,0.36,31,1.435,32,1.08,34,2.615,35,0.935,36,0.94,38,2.052,41,1.198,42,1.435,44,0.38,45,1.737,50,2.052,54,0.861,55,1.214,56,2.052,57,1.435,58,1.479,59,1.435,60,0.892,61,0.271,62,0.94,63,1.734,64,1.398,65,0.16,66,2.396,67,0.801,68,1.435,69,1.435,70,1.214,71,1.435,72,1.435,73,1.435,74,1.435,75,1.435,76,2.052,77,1.435,78,2.615,79,2.766,80,1.02,81,2.615,82,2.396,83,2.615,84,1.276,85,1.276,86,2.396,87,2.052,88,1.435,89,2.052,90,2.396,91,1.435,92,2.052,93,2.052,94,1.435,95,0.892,96,0.035,97,0.035]],["title/classes/BaseLoginProvider.html",[65,0.187,100,1.042]],["body/classes/BaseLoginProvider.html",[2,0.377,3,0.377,4,0.298,6,0.298,7,0.631,14,0.298,15,1.434,16,1.749,17,1.097,20,1.629,23,0.998,25,1.054,26,0.06,27,0.558,28,0.405,29,0.906,35,1.148,36,1.39,44,0.224,47,1.447,54,0.759,58,1.401,61,0.224,65,0.257,67,1.022,80,0.661,96,0.04,97,0.04,100,1.434,101,3.741,102,0.906,103,2.779,104,2.807,105,2.036,106,2.036,107,1.952,108,2.572,109,2.043,110,1.227,111,1.952,112,1.097,113,2.38,114,2.572,115,1.435,116,1.669,117,1.435,118,1.435,119,2.572,120,2.572,121,2.572,122,3.498,123,1.227,124,2.572,125,2.572,126,2.572,127,2.572,128,1.695,129,2.572,130,2.572,131,2.043,132,2.572,133,2.572]],["title/classes/FacebookLoginProvider.html",[65,0.187,134,1.419]],["body/classes/FacebookLoginProvider.html",[2,0.25,3,0.25,4,0.197,6,0.197,7,0.469,11,2.23,12,1.758,14,0.197,15,1.066,16,1.704,17,1.069,20,0.699,23,1.014,25,1.292,26,0.06,27,0.683,28,0.481,29,1.11,32,0.976,35,1.188,36,1.326,39,1.241,40,1.241,41,1.207,44,0.33,47,1.352,54,0.564,60,0.699,61,0.148,65,0.191,67,0.976,80,0.669,84,1.292,85,1.292,95,0.699,96,0.029,97,0.029,100,1.757,102,0.601,104,2.391,105,1.984,106,1.984,107,1.451,110,0.814,111,0.952,112,1.102,113,1.451,115,0.952,116,0.814,117,0.952,118,1.451,123,1.681,134,1.451,135,2.894,136,1.713,137,2.74,138,2.322,139,2.322,140,1.713,141,1.124,142,2.076,143,2.503,144,2.5,145,1.124,146,2.066,147,1.706,148,2.066,149,1.355,150,1.706,151,1.706,152,1.124,153,1.124,154,1.124,155,1.124,156,1.124,157,0.699,158,1.124,159,0.952,160,1.124,161,1.124,162,1.124,163,1.124,164,1.706,165,1.124,166,1.706,167,1.706,168,1.124,169,1.706,170,1.706,171,1.706,172,1.706,173,1.706,174,1.124,175,1.706,176,1.706,177,1.706,178,1.706,179,2.066,180,3.524,181,2.6,182,2.6,183,3.524,184,2.6,185,1.451,186,1.124,187,2.6,188,0.952,189,1.706,190,0.952,191,1.706,192,1.124,193,1.706,194,1.124,195,1.706,196,1.706,197,1.706,198,1.706,199,1.355,200,1.706,201,1.706]],["title/classes/GoogleLoginProvider.html",[65,0.187,202,1.419]],["body/classes/GoogleLoginProvider.html",[2,0.257,3,0.257,4,0.203,6,0.203,7,0.479,8,1.529,11,1.788,12,1.788,14,0.203,15,1.089,16,1.72,17,1.079,20,0.719,23,1.03,25,1.089,26,0.06,27,0.576,28,0.486,29,0.936,32,0.988,35,1.195,36,1.362,39,1.267,40,1.267,41,1.22,44,0.334,47,1.384,54,0.576,60,0.719,61,0.153,65,0.195,67,0.988,80,0.683,84,1.314,85,1.314,95,0.719,96,0.03,97,0.03,100,1.772,102,0.618,104,2.412,105,2.003,106,2.003,107,1.482,110,0.837,111,0.978,112,1.112,113,1.482,115,0.978,116,0.837,117,0.978,118,0.978,123,0.837,136,1.75,137,2.766,138,2.356,139,2.356,140,2.356,141,1.156,142,2.112,144,2.531,145,1.156,152,1.156,153,1.156,154,1.156,155,1.156,156,1.156,157,0.719,159,0.978,160,1.156,161,1.156,162,1.156,163,1.156,165,1.156,168,1.156,174,1.156,186,1.156,188,0.978,190,0.978,192,1.156,194,1.156,199,1.393,202,1.482,203,2.973,204,3.575,205,2.656,206,2.546,207,1.754,208,1.754,209,1.754,210,1.754,211,1.156,212,1.754,213,1.754,214,1.754,215,1.754,216,1.754,217,0.837,218,1.754,219,1.754,220,2.656,221,1.754,222,1.754,223,1.754,224,1.754,225,1.754,226,1.754,227,1.754,228,1.754,229,1.754,230,1.754,231,1.754,232,1.754,233,1.393,234,1.393]],["title/classes/LinkedInResponse.html",[65,0.187,235,1.042]],["body/classes/LinkedInResponse.html",[2,0.445,3,0.445,4,0.351,6,0.351,7,0.703,14,0.351,23,1.022,26,0.058,27,0.846,28,0.545,32,1.36,44,0.264,61,0.375,64,1.699,65,0.334,96,0.044,97,0.044,112,0.78,185,1.691,217,1.447,235,1.599,236,1.691,237,3,238,3,239,3,240,3,241,3.032,242,3.032,243,3.032,244,3.032,245,3.032,246,1.998,247,1.447]],["title/classes/LinkedinLoginProvider.html",[65,0.187,248,1.419]],["body/classes/LinkedinLoginProvider.html",[2,0.247,3,0.247,4,0.194,6,0.194,7,0.463,11,1.741,12,1.741,14,0.194,15,1.054,16,1.695,17,1.064,20,0.689,23,1.021,25,1.28,26,0.061,27,0.677,28,0.479,29,1.1,32,0.969,35,1.198,36,1.32,39,1.226,40,1.226,41,1.2,44,0.328,47,1.37,54,0.557,60,0.689,61,0.146,65,0.189,67,0.969,80,0.661,84,1.28,85,1.28,95,0.689,96,0.029,97,0.029,100,1.748,102,0.592,104,2.379,105,1.973,106,1.973,107,1.434,110,0.802,111,0.937,112,1.097,113,1.741,115,0.937,116,1.226,117,0.937,118,1.434,123,1.226,128,2.057,131,1.335,136,1.694,137,2.725,138,2.304,139,2.304,140,1.694,141,1.107,142,2.057,144,2.483,145,1.107,146,2.042,148,1.335,149,1.335,152,1.107,153,1.107,154,1.107,155,1.107,156,1.107,157,0.689,159,0.937,160,1.107,161,1.107,162,1.107,163,1.107,165,1.107,168,1.107,174,1.107,186,1.107,188,0.937,190,0.937,192,1.107,194,1.107,233,1.335,234,1.335,235,1.629,247,0.802,248,1.434,249,2.94,250,3.496,251,1.68,252,1.68,253,1.68,254,1.68,255,1.68,256,1.68,257,1.68,258,1.68,259,2.57,260,1.68,261,1.68,262,1.68,263,1.68,264,2.57,265,2.57,266,2.57,267,1.68,268,2.57,269,1.68,270,1.68,271,2.57,272,1.68,273,1.68,274,1.68,275,1.68,276,1.68,277,1.68,278,1.68,279,1.68]],["title/interfaces/LoginProvider.html",[58,0.896,62,0.768]],["body/interfaces/LoginProvider.html",[2,0.489,3,0.489,4,0.385,6,0.385,7,0.746,15,1.696,16,1.931,17,1.212,23,0.977,26,0.058,28,0.385,35,1.158,36,1.491,44,0.29,54,0.722,58,1.458,61,0.29,62,1.25,67,1.158,80,0.856,96,0.047,97,0.047,102,1.173,105,2.248,106,2.248,109,2.645,110,1.589,280,3.742,281,3.329]],["title/classes/LoginProviderClass.html",[65,0.187,112,0.654]],["body/classes/LoginProviderClass.html",[2,0.468,3,0.468,4,0.369,6,0.369,7,0.726,14,0.369,23,0.958,26,0.058,27,1.037,28,0.511,32,1.357,44,0.277,61,0.384,64,1.721,65,0.34,96,0.046,97,0.046,112,1.036,185,1.778,217,1.521,235,1.306,236,1.778,237,2.1,238,2.1,239,2.1,240,2.1,246,2.1,247,2.213,282,3.187,283,3.187,284,3.187]],["title/modules/SocialLoginModule.html",[285,1.042,286,1.213]],["body/modules/SocialLoginModule.html",[1,2.032,2,0.496,3,0.496,4,0.391,14,0.525,26,0.06,54,1.027,55,1.885,61,0.363,65,0.248,96,0.047,97,0.047,157,1.385,285,1.712,286,2.365,287,2.685,288,2.685,289,2.227,290,2.685,291,2.685,292,3.318,293,2.685,294,2.227,295,3.38,296,3.318,297,4.177,298,3.38,299,3.38]],["title/classes/SocialUser.html",[44,0.221,65,0.187]],["body/classes/SocialUser.html",[2,0.432,3,0.432,4,0.341,6,0.341,7,0.69,14,0.521,23,1.038,26,0.058,27,1.012,28,0.554,29,1.348,32,1.361,44,0.333,61,0.37,64,1.685,65,0.33,96,0.043,97,0.043,112,0.757,185,2.512,217,2.148,235,1.207,236,1.642,237,1.94,238,1.94,239,1.94,240,1.94,246,2.967,247,1.405,300,2.944,301,2.944,302,2.944,303,2.944,304,2.944,305,2.944]],["title/coverage.html",[306,2.757]],["body/coverage.html",[0,1.21,1,1.21,4,0.342,5,2.375,22,1.21,26,0.059,28,0.342,41,0.891,44,0.257,47,1.472,58,1.04,62,1.158,63,1.408,65,0.363,70,2.875,96,0.043,97,0.043,100,1.21,101,2.345,102,1.741,112,0.759,134,1.647,135,2.526,158,1.945,202,1.647,203,2.526,211,1.945,235,1.21,236,2.375,248,1.647,249,2.526,280,2.345,306,2.345,307,2.345,308,2.952,309,2.952,310,3.834,311,2.952,312,2.952,313,3.834,314,2.952,315,2.952,316,2.952,317,2.806,318,4.258,319,3.834,320,2.952,321,2.952]],["title/index.html",[6,0.246,322,1.687,323,1.687]],["body/index.html",[1,1.73,8,1.384,14,0.489,17,0.507,22,1.409,26,0.06,27,0.428,30,3.011,35,0.507,41,1.144,44,0.33,45,1.618,47,1.317,54,0.916,61,0.33,64,1.422,65,0.252,67,0.746,80,1.175,96,0.033,97,0.033,103,2.304,116,1.808,123,0.942,128,1.3,134,1.618,143,1.568,157,0.809,159,1.618,179,1.568,188,1.101,190,1.101,202,1.618,206,1.568,217,0.942,247,0.942,248,1.618,285,1.189,286,1.64,289,1.3,294,2.497,296,1.568,307,2.304,322,1.568,323,1.568,324,4.221,325,4.476,326,1.973,327,1.973,328,1.973,329,3.438,330,1.973,331,1.973,332,1.568,333,2.9,334,1.973,335,2.9,336,1.973,337,2.9,338,1.973,339,1.973,340,2.9,341,1.973,342,1.973,343,1.973,344,1.568,345,1.973,346,1.568,347,1.973,348,4.037,349,1.973,350,1.973,351,1.973,352,1.973,353,1.973,354,1.973,355,3.79,356,1.973,357,1.973,358,1.973,359,2.9,360,1.973,361,1.973,362,2.9,363,2.9,364,2.9,365,2.9,366,2.9,367,2.9,368,2.9,369,2.9,370,2.9,371,1.973,372,1.973,373,1.973,374,1.973,375,1.973,376,1.973,377,1.973,378,1.973,379,1.973,380,1.973,381,1.973,382,2.9,383,1.973,384,1.973,385,2.9,386,1.973,387,1.973,388,1.973,389,1.973,390,1.973,391,1.973,392,1.973,393,1.973,394,1.973,395,2.9,396,2.9,397,1.973,398,2.9,399,1.973,400,1.973,401,1.973,402,1.973,403,1.973,404,1.973,405,1.973]],["title/modules.html",[285,1.423]],["body/modules.html",[26,0.053,96,0.053,97,0.053,285,1.649,286,1.92,332,3.197,406,4.024,407,4.024,408,4.024]],["title/overview.html",[409,2.757]],["body/overview.html",[0,1.518,1,1.934,14,0.429,26,0.053,61,0.322,62,1.118,65,0.272,96,0.05,97,0.05,157,1.518,285,1.81,286,2.331,287,2.943,288,2.943,289,2.441,290,2.943,291,2.943,292,3.508,293,2.943,294,2.441,344,3.508,346,2.943,409,2.943,410,3.704]],["title/miscellaneous/variables.html",[317,2.016,411,1.687]],["body/miscellaneous/variables.html",[6,0.425,26,0.056,28,0.544,47,1.526,96,0.05,97,0.05,102,1.78,135,2.417,158,3.096,203,2.417,211,3.096,249,2.417,317,2.417,411,2.914,412,3.668,413,3.668,414,3.668]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["0/1",{"_index":318,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":316,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":319,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":314,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":315,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":313,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":344,"title":{},"body":{"index.html":{},"overview.html":{}}}],["2",{"_index":346,"title":{},"body":{"index.html":{},"overview.html":{}}}],["4",{"_index":331,"title":{},"body":{"index.html":{}}}],["8",{"_index":410,"title":{},"body":{"overview.html":{}}}],["_authstat",{"_index":9,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["_user",{"_index":10,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["abstract",{"_index":104,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["accessor",{"_index":18,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesstoken",{"_index":180,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["address,pictur",{"_index":266,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["angular",{"_index":330,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":298,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"modules/SocialLoginModule.html":{}}}],["angular4",{"_index":328,"title":{},"body":{"index.html":{}}}],["aot",{"_index":396,"title":{},"body":{"index.html":{}}}],["api_key",{"_index":131,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["app",{"_index":355,"title":{},"body":{"index.html":{}}}],["appid",{"_index":167,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["appmodul",{"_index":340,"title":{},"body":{"index.html":{}}}],["array",{"_index":345,"title":{},"body":{"index.html":{}}}],["auth",{"_index":260,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["auth.servic",{"_index":299,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["auth2",{"_index":204,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authent",{"_index":329,"title":{},"body":{"index.html":{}}}],["author",{"_index":257,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["authresponseobj",{"_index":223,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authresponseobj.access_token",{"_index":229,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["authservic",{"_index":1,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"modules/SocialLoginModule.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["authserviceconfig",{"_index":22,"title":{"classes/AuthServiceConfig.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{},"index.html":{}}}],["authserviceconfigitem",{"_index":63,"title":{"interfaces/AuthServiceConfigItem.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["authstat",{"_index":19,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["auto",{"_index":347,"title":{},"body":{"index.html":{}}}],["autologappev",{"_index":169,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["autologin",{"_index":66,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["baseloginprovid",{"_index":100,"title":{"classes/BaseLoginProvider.html":{}},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{}}}],["baseloginprovider:11",{"_index":153,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:6",{"_index":145,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:7",{"_index":152,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:8",{"_index":154,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["baseloginprovider:9",{"_index":155,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["basic",{"_index":384,"title":{},"body":{"index.html":{}}}],["behaviorsubject",{"_index":38,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["behaviorsubject(nul",{"_index":42,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["boolean",{"_index":67,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["bootstrap",{"_index":289,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["brows",{"_index":408,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":406,"title":{},"body":{"modules.html":{}}}],["build",{"_index":395,"title":{},"body":{"index.html":{}}}],["catch((err",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["check",{"_index":333,"title":{},"body":{"index.html":{}}}],["class",{"_index":65,"title":{"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["client",{"_index":352,"title":{},"body":{"index.html":{}}}],["client_id",{"_index":216,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["clientid",{"_index":142,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["cluster_socialloginmodul",{"_index":290,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["cluster_socialloginmodule_provid",{"_index":291,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["commonmodul",{"_index":297,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["compon",{"_index":362,"title":{},"body":{"index.html":{}}}],["config",{"_index":30,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["config.autologin",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["config.provid",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["connect",{"_index":178,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["const",{"_index":179,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"index.html":{}}}],["constructor",{"_index":20,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["constructor(clientid",{"_index":141,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["constructor(config",{"_index":21,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["constructor(priv",{"_index":159,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["constructor(provid",{"_index":68,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["contain",{"_index":383,"title":{},"body":{"index.html":{}}}],["contribut",{"_index":399,"title":{},"body":{"index.html":{}}}],["cooki",{"_index":170,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["coverag",{"_index":306,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":403,"title":{},"body":{"index.html":{}}}],["declar",{"_index":157,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["default",{"_index":39,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["defin",{"_index":23,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["demo",{"_index":364,"title":{},"body":{"index.html":{}}}],["demo.component.css",{"_index":368,"title":{},"body":{"index.html":{}}}],["demo.component.html",{"_index":366,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":369,"title":{},"body":{"index.html":{}}}],["depend",{"_index":287,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["display",{"_index":394,"title":{},"body":{"index.html":{}}}],["doc",{"_index":334,"title":{},"body":{"index.html":{}}}],["document",{"_index":307,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["document.createelement('script",{"_index":121,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["document.getelementbyid(obj.nam",{"_index":119,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["document.head.appendchild(signinj",{"_index":133,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["drawus",{"_index":140,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["drawuser(respons",{"_index":146,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["email",{"_index":217,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["email,public_profil",{"_index":200,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["emailaddress",{"_index":237,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["entities/bas",{"_index":156,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["entities/login",{"_index":59,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["entities/us",{"_index":60,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["err",{"_index":233,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["etc",{"_index":388,"title":{},"body":{"index.html":{}}}],["export",{"_index":61,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"index.html":{},"overview.html":{}}}],["extend",{"_index":136,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["face",{"_index":397,"title":{},"body":{"index.html":{}}}],["facebook",{"_index":143,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"index.html":{}}}],["facebookloginprovid",{"_index":134,"title":{"classes/FacebookLoginProvider.html":{}},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["facebookloginprovider('facebook",{"_index":354,"title":{},"body":{"index.html":{}}}],["facebookloginprovider.provider_id",{"_index":353,"title":{},"body":{"index.html":{}}}],["fals",{"_index":129,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["fb",{"_index":158,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fb.api('/me?fields=name,email,pictur",{"_index":182,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.appevents.logpageview",{"_index":175,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.getauthresponse()['accesstoken",{"_index":181,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.getloginstatus(funct",{"_index":176,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.init",{"_index":166,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.login((respons",{"_index":197,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["fb.logout((respons",{"_index":201,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["file",{"_index":4,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["firstnam",{"_index":238,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["found",{"_index":48,"title":{},"body":{"injectables/AuthService.html":{}}}],["function",{"_index":358,"title":{},"body":{"index.html":{}}}],["gapi",{"_index":211,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gapi.auth2.init",{"_index":215,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["gapi.load('auth2",{"_index":213,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["get",{"_index":322,"title":{"index.html":{}},"body":{"index.html":{}}}],["getauthst",{"_index":52,"title":{},"body":{"injectables/AuthService.html":{}}}],["googl",{"_index":206,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"index.html":{}}}],["googleloginprovid",{"_index":202,"title":{"classes/GoogleLoginProvider.html":{}},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["googleloginprovider('googl",{"_index":350,"title":{},"body":{"index.html":{}}}],["googleloginprovider.provider_id",{"_index":349,"title":{},"body":{"index.html":{}}}],["https://apis.google.com/js/platform.j",{"_index":212,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["https://connect.facebook.net/en_us/sdk.j",{"_index":164,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["https://graph.facebook.com",{"_index":195,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["https://platform.linkedin.com/in.j",{"_index":255,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["id",{"_index":64,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["identifi",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":103,"title":{},"body":{"classes/BaseLoginProvider.html":{},"index.html":{}}}],["import",{"_index":54,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"modules/SocialLoginModule.html":{},"index.html":{}}}],["in.api.raw",{"_index":262,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.api.raw('/people/~:(id,first",{"_index":277,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.env.auth.oauth_token",{"_index":275,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.event.on(in",{"_index":259,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.init",{"_index":256,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.author",{"_index":276,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.isauthor",{"_index":261,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.logout((respons",{"_index":279,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["in.user.refresh",{"_index":270,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["index",{"_index":6,"title":{"index.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{}}}],["inform",{"_index":385,"title":{},"body":{"index.html":{}}}],["inherit",{"_index":144,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["initi",{"_index":106,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["inject",{"_index":0,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{},"overview.html":{}}}],["instal",{"_index":335,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":62,"title":{"interfaces/AuthServiceConfigItem.html":{},"interfaces/LoginProvider.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{},"overview.html":{}}}],["isiniti",{"_index":105,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["issu",{"_index":398,"title":{},"body":{"index.html":{}}}],["key",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["lastnam",{"_index":239,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["legend",{"_index":288,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["librari",{"_index":327,"title":{},"body":{"index.html":{}}}],["linkedin",{"_index":128,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["linkedinloginprovid",{"_index":248,"title":{"classes/LinkedinLoginProvider.html":{}},"body":{"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["linkedinloginprovider('linkedin_client_id",{"_index":357,"title":{},"body":{"index.html":{}}}],["linkedinloginprovider.provider_id",{"_index":356,"title":{},"body":{"index.html":{}}}],["linkedinrespons",{"_index":235,"title":{"classes/LinkedInResponse.html":{}},"body":{"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["loadscript",{"_index":107,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["loadscript(obj",{"_index":111,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["log",{"_index":348,"title":{},"body":{"index.html":{}}}],["loggedin",{"_index":389,"title":{},"body":{"index.html":{}}}],["login",{"_index":47,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["login_provider_not_found",{"_index":13,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginimport",{"_index":339,"title":{},"body":{"index.html":{}}}],["loginprovid",{"_index":58,"title":{"interfaces/LoginProvider.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{}}}],["loginproviderclass",{"_index":112,"title":{"classes/LoginProviderClass.html":{}},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["loginproviderobj",{"_index":138,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["map",{"_index":50,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["match",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":15,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["miscellan",{"_index":411,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":285,"title":{"modules/SocialLoginModule.html":{},"modules.html":{}},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["name",{"_index":27,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["name,email",{"_index":265,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["name,last",{"_index":264,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["new",{"_index":41,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"index.html":{}}}],["ng4",{"_index":324,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":296,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{}}}],["ngoninit",{"_index":390,"title":{},"body":{"index.html":{}}}],["notifi",{"_index":380,"title":{},"body":{"index.html":{}}}],["npm",{"_index":337,"title":{},"body":{"index.html":{}}}],["null",{"_index":45,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"index.html":{}}}],["oauth",{"_index":351,"title":{},"body":{"index.html":{}}}],["obj",{"_index":115,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["obj.id).replac",{"_index":132,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["obj.nam",{"_index":127,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["obj.url",{"_index":125,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["object",{"_index":382,"title":{},"body":{"index.html":{}}}],["observ",{"_index":56,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["oninit",{"_index":370,"title":{},"body":{"index.html":{}}}],["onlinkedinload",{"_index":250,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["onload",{"_index":113,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["option",{"_index":29,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"classes/SocialUser.html":{}}}],["out",{"_index":294,"title":{},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":409,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["param",{"_index":343,"title":{},"body":{"index.html":{}}}],["paramet",{"_index":25,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["people/~:(id,first",{"_index":263,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["photo",{"_index":387,"title":{},"body":{"index.html":{}}}],["photourl",{"_index":246,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["picture?type=norm",{"_index":196,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["pictureurl",{"_index":240,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["privat",{"_index":8,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/GoogleLoginProvider.html":{},"index.html":{}}}],["profil",{"_index":221,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getemail",{"_index":227,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getid",{"_index":225,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getimageurl",{"_index":228,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["profile.getnam",{"_index":226,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["project",{"_index":400,"title":{},"body":{"index.html":{}}}],["promis",{"_index":36,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["promise((resolv",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["promise.then",{"_index":231,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["properti",{"_index":7,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["provid",{"_index":14,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"index.html":{},"overview.html":{}}}],["provideconfig",{"_index":359,"title":{},"body":{"index.html":{}}}],["provider.initialize().then((us",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["provider.t",{"_index":102,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["provider.ts:10",{"_index":205,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:11",{"_index":114,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["provider.ts:18",{"_index":149,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:19",{"_index":208,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:39",{"_index":207,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:4",{"_index":108,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["provider.ts:41",{"_index":252,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:43",{"_index":147,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:47",{"_index":251,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:5",{"_index":281,"title":{},"body":{"interfaces/LoginProvider.html":{}}}],["provider.ts:51",{"_index":209,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:53",{"_index":150,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:57",{"_index":253,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:6",{"_index":109,"title":{},"body":{"classes/BaseLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["provider.ts:60",{"_index":210,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["provider.ts:66",{"_index":151,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["provider.ts:67",{"_index":254,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:7",{"_index":110,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["provider.ts:8",{"_index":117,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider.ts:9",{"_index":118,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["provider_id",{"_index":139,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["providerid",{"_index":34,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.initialize().then((us",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.isiniti",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.signin().then((us",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["providerobject.signout().then",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["public",{"_index":137,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["pull",{"_index":404,"title":{},"body":{"index.html":{}}}],["re",{"_index":183,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["readonli",{"_index":12,"title":{},"body":{"injectables/AuthService.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["receiv",{"_index":381,"title":{},"body":{"index.html":{}}}],["refrenc",{"_index":326,"title":{},"body":{"index.html":{}}}],["reject",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["reject(authservice.login_provider_not_found",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["reject(err",{"_index":234,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["report",{"_index":402,"title":{},"body":{"index.html":{}}}],["request",{"_index":405,"title":{},"body":{"index.html":{}}}],["reset",{"_index":293,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}],["resolv",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["resolve(facebookloginprovider.drawuser(object.assign",{"_index":184,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["resolve(this.drawus",{"_index":220,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["resolve(this.drawuser(r",{"_index":268,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["resolve(us",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["respons",{"_index":148,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["response.authrespons",{"_index":198,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.email",{"_index":191,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.emailaddress",{"_index":271,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.firstnam",{"_index":272,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.id",{"_index":187,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.lastnam",{"_index":273,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.nam",{"_index":189,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.pictureurl",{"_index":274,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["response.statu",{"_index":177,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["response.token",{"_index":193,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["result",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result((r",{"_index":267,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["return",{"_index":35,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["rxj",{"_index":57,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["save",{"_index":338,"title":{},"body":{"index.html":{}}}],["scope",{"_index":199,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{}}}],["selector",{"_index":363,"title":{},"body":{"index.html":{}}}],["sign",{"_index":361,"title":{},"body":{"index.html":{}}}],["signin",{"_index":16,"title":{},"body":{"injectables/AuthService.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{}}}],["signin(providerid",{"_index":31,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["signinj",{"_index":120,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.async",{"_index":122,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.onload",{"_index":126,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.src",{"_index":124,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinjs.text",{"_index":130,"title":{},"body":{"classes/BaseLoginProvider.html":{}}}],["signinwithfb",{"_index":373,"title":{},"body":{"index.html":{}}}],["signinwithgoogl",{"_index":371,"title":{},"body":{"index.html":{}}}],["signinwithlinkedin",{"_index":375,"title":{},"body":{"index.html":{}}}],["signout",{"_index":17,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["social",{"_index":325,"title":{},"body":{"index.html":{}}}],["socialloginmodul",{"_index":286,"title":{"modules/SocialLoginModule.html":{}},"body":{"modules/SocialLoginModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["socialus",{"_index":44,"title":{"classes/SocialUser.html":{}},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{},"index.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"modules/SocialLoginModule.html":{},"classes/SocialUser.html":{}}}],["src/.../facebook",{"_index":412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../googl",{"_index":413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../linkedin",{"_index":414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/auth.module.t",{"_index":295,"title":{},"body":{"modules/SocialLoginModule.html":{}}}],["src/auth.service.t",{"_index":5,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"coverage.html":{}}}],["src/auth.service.ts:14",{"_index":99,"title":{},"body":{"classes/AuthServiceConfig.html":{}}}],["src/auth.service.ts:15",{"_index":98,"title":{},"body":{"classes/AuthServiceConfig.html":{}}}],["src/auth.service.ts:29",{"_index":49,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:31",{"_index":51,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:33",{"_index":43,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:35",{"_index":46,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:36",{"_index":53,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:38",{"_index":24,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:57",{"_index":33,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth.service.ts:93",{"_index":37,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/entities/bas",{"_index":101,"title":{},"body":{"classes/BaseLoginProvider.html":{},"coverage.html":{}}}],["src/entities/login",{"_index":280,"title":{},"body":{"interfaces/LoginProvider.html":{},"coverage.html":{}}}],["src/entities/user.t",{"_index":236,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{}}}],["src/entities/user.ts:11",{"_index":283,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:12",{"_index":282,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:13",{"_index":284,"title":{},"body":{"classes/LoginProviderClass.html":{}}}],["src/entities/user.ts:17",{"_index":241,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:18",{"_index":242,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:19",{"_index":243,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:2",{"_index":304,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:20",{"_index":244,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:21",{"_index":245,"title":{},"body":{"classes/LinkedInResponse.html":{}}}],["src/entities/user.ts:3",{"_index":301,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:4",{"_index":300,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:5",{"_index":302,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:6",{"_index":303,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/entities/user.ts:7",{"_index":305,"title":{},"body":{"classes/SocialUser.html":{}}}],["src/providers/facebook",{"_index":135,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/googl",{"_index":203,"title":{},"body":{"classes/GoogleLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/providers/linkedin",{"_index":249,"title":{},"body":{"classes/LinkedinLoginProvider.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":323,"title":{"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":379,"title":{},"body":{"index.html":{}}}],["statement",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":11,"title":{},"body":{"injectables/AuthService.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["string",{"_index":32,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["styleurl",{"_index":367,"title":{},"body":{"index.html":{}}}],["subscrib",{"_index":378,"title":{},"body":{"index.html":{}}}],["such",{"_index":386,"title":{},"body":{"index.html":{}}}],["super",{"_index":160,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["support",{"_index":332,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":407,"title":{},"body":{"modules.html":{}}}],["systemreadi",{"_index":269,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["tabl",{"_index":321,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":320,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":341,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":365,"title":{},"body":{"index.html":{}}}],["this._authstate.asobserv",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._authstate.next(nul",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._authstate.next(us",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._us",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this._user.provid",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.auth2",{"_index":214,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.currentuser.get().getauthresponse(tru",{"_index":224,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.currentuser.get().getbasicprofil",{"_index":222,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.issignedin.get",{"_index":219,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.signin",{"_index":230,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.signout().then((err",{"_index":232,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.auth2.then",{"_index":218,"title":{},"body":{"classes/GoogleLoginProvider.html":{}}}],["this.authservice.authstate.subscribe((us",{"_index":391,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(facebookloginprovider.provider_id",{"_index":374,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(googleloginprovider.provider_id",{"_index":372,"title":{},"body":{"index.html":{}}}],["this.authservice.signin(linkedinloginprovider.provider_id",{"_index":376,"title":{},"body":{"index.html":{}}}],["this.authservice.signout",{"_index":377,"title":{},"body":{"index.html":{}}}],["this.autologin",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.clientid",{"_index":168,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.isiniti",{"_index":174,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loadscript(this.loginproviderobj",{"_index":165,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loggedin",{"_index":393,"title":{},"body":{"index.html":{}}}],["this.loginproviderobj.id",{"_index":161,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loginproviderobj.nam",{"_index":162,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.loginproviderobj.url",{"_index":163,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["this.onlinkedinload",{"_index":258,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["this.provid",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.providers.foreach((provid",{"_index":75,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.providers.get(providerid",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["this.us",{"_index":392,"title":{},"body":{"index.html":{}}}],["token",{"_index":185,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{}}}],["true",{"_index":123,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["two",{"_index":342,"title":{},"body":{"index.html":{}}}],["type",{"_index":28,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":247,"title":{},"body":{"classes/LinkedInResponse.html":{},"classes/LinkedinLoginProvider.html":{},"classes/LoginProviderClass.html":{},"classes/SocialUser.html":{},"index.html":{}}}],["url)').result((r",{"_index":278,"title":{},"body":{"classes/LinkedinLoginProvider.html":{}}}],["usefactori",{"_index":360,"title":{},"body":{"index.html":{}}}],["user",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{},"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"interfaces/LoginProvider.html":{},"index.html":{}}}],["user.email",{"_index":190,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["user.id",{"_index":186,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["user.nam",{"_index":188,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["user.photourl",{"_index":194,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["user.provid",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"interfaces/AuthServiceConfigItem.html":{}}}],["user.token",{"_index":192,"title":{},"body":{"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["v2.9",{"_index":173,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["valu",{"_index":40,"title":{},"body":{"injectables/AuthService.html":{},"classes/AuthServiceConfig.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{}}}],["variabl",{"_index":317,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":172,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["via",{"_index":336,"title":{},"body":{"index.html":{}}}],["void",{"_index":116,"title":{},"body":{"classes/BaseLoginProvider.html":{},"classes/FacebookLoginProvider.html":{},"classes/GoogleLoginProvider.html":{},"classes/LinkedinLoginProvider.html":{},"index.html":{}}}],["welcom",{"_index":401,"title":{},"body":{"index.html":{}}}],["xfbml",{"_index":171,"title":{},"body":{"classes/FacebookLoginProvider.html":{}}}],["zoom",{"_index":292,"title":{},"body":{"modules/SocialLoginModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _authState\n                            \n                            \n                                    Private\n                                _user\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                LOGIN_PROVIDER_NOT_FOUND\n                            \n                            \n                                    Private\n                                providers\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authState\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: AuthServiceConfig)\n                    \n                \n                        \n                            \n                                Defined in src/auth.service.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    AuthServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn(providerId: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providerId\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/auth.service.ts:93\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _authState\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _authState:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(null)\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _user:     SocialUser\n\n                    \n                \n                    \n                        \n                            Type :     SocialUser\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                                Readonly\n                            LOGIN_PROVIDER_NOT_FOUND\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOGIN_PROVIDER_NOT_FOUND:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Login provider not found'\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            providers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providers:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:31\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authState\n                    \n                \n\n                \n                    \n                        getauthState()\n                    \n                \n                            \n                                \n                                    Defined in src/auth.service.ts:36\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthServiceConfig.html":{"url":"classes/AuthServiceConfig.html","title":"class - AuthServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                providers\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(providers: AuthServiceConfigItem[], autoLogin: boolean)\n                    \n                \n                        \n                            \n                                Defined in src/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        providers\n                                                  \n                                                        \n                                                                    AuthServiceConfigItem[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        autoLogin\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            autoLogin\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        autoLogin:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            providers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        providers:     Map\n\n                    \n                \n                    \n                        \n                            Type :     Map\n\n                        \n                    \n                    \n                        \n                            Default value : new Map()\n                        \n                    \n                        \n                            \n                                    Defined in src/auth.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthServiceConfigItem.html":{"url":"interfaces/AuthServiceConfigItem.html","title":"interface - AuthServiceConfigItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthServiceConfigItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        provider\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:     LoginProvider\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoginProvider\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { Observable ,  BehaviorSubject } from 'rxjs';\n\nimport { LoginProvider } from './entities/login-provider';\nimport { SocialUser } from './entities/user';\n\nexport interface AuthServiceConfigItem {\n  id: string;\n  provider: LoginProvider;\n}\n\nexport class AuthServiceConfig {\n  providers: Map = new Map();\n  autoLogin: boolean;\n\n  constructor(providers: AuthServiceConfigItem[], autoLogin: boolean) {\n    this.autoLogin = autoLogin;\n    for (let i = 0; i ;\n\n  private _authState: BehaviorSubject = new BehaviorSubject(null);\n\n  private _user: SocialUser = null;\n  get authState(): Observable {\n    return this._authState.asObservable();\n  }\n\n  constructor(config: AuthServiceConfig) {\n    this.providers = config.providers;\n    if (config.autoLogin) {\n      this.providers.forEach((provider: LoginProvider, key: string) => {\n        if (provider) {\n          provider.initialize().then((user: SocialUser) => {\n            user.provider = key;\n            this._user = user;\n            this._authState.next(user);\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      });\n    }\n  }\n\n  signIn(providerId: string): Promise {\n    return new Promise((resolve, reject) => {\n      let providerObject = this.providers.get(providerId);\n      if (providerObject) {\n        if (providerObject.isInitialize) {\n          providerObject.signIn().then((user: SocialUser) => {\n            user.provider = providerId;\n            resolve(user);\n\n            this._user = user;\n            this._authState.next(user);\n          });\n        } else {\n          providerObject.initialize().then((user: SocialUser) => {\n            if (user) {\n              user.provider = providerId;\n              resolve(user);\n              this._authState.next(user);\n            } else {\n              providerObject.signIn().then((user: SocialUser) => {\n                user.provider = providerId;\n                resolve(user);\n                this._user = user;\n                this._authState.next(user);\n              });\n            }\n          }).catch((err) => {\n            // this._authState.next(null);\n          });\n        }\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      if (this._user && this._user.provider) {\n        let providerId = this._user.provider;\n        let providerObject = this.providers.get(providerId);\n        providerObject.signOut().then(() => {\n          this._user = null;\n          this._authState.next(null);\n          resolve();\n        }).catch((err) => {\n          this._authState.next(null);\n        });\n      } else {\n        reject(AuthService.LOGIN_PROVIDER_NOT_FOUND);\n      }\n    });\n  }\n\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseLoginProvider.html":{"url":"classes/BaseLoginProvider.html","title":"class - BaseLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/base-login-provider.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        LoginProvider\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/entities/base-login-provider.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/base-login-provider.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { LoginProvider } from './login-provider';\nimport { SocialUser, LoginProviderClass } from './user';\n\nexport abstract class BaseLoginProvider implements LoginProvider {\n  constructor() { }\n  abstract isInitialize: boolean;\n  abstract initialize(): Promise;\n  abstract signIn(): Promise;\n  abstract signOut(): Promise;\n\n  loadScript(obj: LoginProviderClass, onload: any): void {\n    if (document.getElementById(obj.name)) { return; }\n    let signInJS = document.createElement('script');\n    signInJS.async = true;\n    signInJS.src = obj.url;\n    signInJS.onload = onload;\n    if (obj.name === 'LINKEDIN') {\n      signInJS.async = false;\n      signInJS.text = ('api_key: ' + obj.id).replace('\\'', '');\n    }\n    document.head.appendChild(signInJS);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FacebookLoginProvider.html":{"url":"classes/FacebookLoginProvider.html","title":"class - FacebookLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FacebookLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/facebook-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    Abstract\n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Abstract\n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/facebook-login-provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'FACEBOOK'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        drawUser(response: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SocialUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:53\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/facebook-login-provider.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass } from '../entities/user';\n\ndeclare let FB: any;\n\nexport class FacebookLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'FACEBOOK';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'FACEBOOK';\n    this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n          FB.init({\n            appId: this.clientId,\n            autoLogAppEvents: true,\n            cookie: true,\n            xfbml: true,\n            version: 'v2.9'\n          });\n          this.isInitialize = true;\n          FB.AppEvents.logPageView();\n\n          FB.getLoginStatus(function (response: any) {\n            if (response.status === 'connected') {\n              const accessToken = FB.getAuthResponse()['accessToken'];\n              FB.api('/me?fields=name,email,picture', (res: any) => {\n                resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\n              });\n            }\n          });\n        });\n    });\n  }\n\n  static drawUser(response: any): SocialUser {\n    let user: SocialUser = new SocialUser();\n    user.id = response.id;\n    user.name = response.name;\n    user.email = response.email;\n    user.token = response.token;\n    user.photoUrl = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      FB.login((response: any) => {\n        if (response.authResponse) {\n          const accessToken = FB.getAuthResponse()['accessToken'];\n          FB.api('/me?fields=name,email,picture', (res: any) => {\n            resolve(FacebookLoginProvider.drawUser(Object.assign({}, {token: accessToken}, res)));\n          });\n        }\n      }, { scope: 'email,public_profile' });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      FB.logout((response: any) => {\n        resolve();\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleLoginProvider.html":{"url":"classes/GoogleLoginProvider.html","title":"class - GoogleLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/google-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                auth2\n                            \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    Abstract\n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Abstract\n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/google-login-provider.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            auth2\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth2:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'GOOGLE'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrawUser()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     SocialUser\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:51\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/google-login-provider.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass } from '../entities/user';\n\ndeclare let gapi: any;\n\nexport class GoogleLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'GOOGLE';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n  private auth2: any;\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'GOOGLE';\n    this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n        gapi.load('auth2', () => {\n          this.isInitialize = true;\n          this.auth2 = gapi.auth2.init({\n            client_id: this.clientId,\n            scope: 'email'\n          });\n\n          this.auth2.then(() => {\n            if (this.auth2.isSignedIn.get()) {\n              resolve(this.drawUser());\n            }\n          });\n        });\n      });\n    });\n  }\n\n  drawUser(): SocialUser {\n    let user: SocialUser = new SocialUser();\n    let profile = this.auth2.currentUser.get().getBasicProfile();\n    let authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);\n    user.id = profile.getId();\n    user.name = profile.getName();\n    user.email = profile.getEmail();\n    user.photoUrl = profile.getImageUrl();\n    user.token = authResponseObj.access_token;\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      let promise = this.auth2.signIn();\n      promise.then(() => {\n        resolve(this.drawUser());\n      });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      this.auth2.signOut().then((err: any) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkedInResponse.html":{"url":"classes/LinkedInResponse.html","title":"class - LinkedInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkedInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailAddress\n                            \n                            \n                                firstName\n                            \n                            \n                                id\n                            \n                            \n                                lastName\n                            \n                            \n                                pictureUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emailAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAddress:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        firstName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lastName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pictureUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pictureUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkedinLoginProvider.html":{"url":"classes/LinkedinLoginProvider.html","title":"class - LinkedinLoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkedinLoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/providers/linkedin-login-provider.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseLoginProvider\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isInitialize\n                            \n                            \n                                    Public\n                                loginProviderObj\n                            \n                            \n                                    Static\n                                    Readonly\n                                PROVIDER_ID\n                            \n                            \n                                    Abstract\n                                isInitialize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawUser\n                            \n                            \n                                initialize\n                            \n                            \n                                onLinkedInLoad\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                    Abstract\n                                initialize\n                            \n                            \n                                loadScript\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(clientId: string)\n                    \n                \n                        \n                            \n                                Defined in src/providers/linkedin-login-provider.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        clientId\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loginProviderObj\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loginProviderObj:     LoginProviderClass\n\n                    \n                \n                    \n                        \n                            Type :     LoginProviderClass\n\n                        \n                    \n                    \n                        \n                            Default value : new LoginProviderClass()\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            PROVIDER_ID\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        PROVIDER_ID:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'LINKEDIN'\n                        \n                    \n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            isInitialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isInitialize:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drawUser\n                            \n                            \n                        \n                    \n                \n                \n                    \ndrawUser(response: LinkedInResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    LinkedInResponse\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     SocialUser\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onLinkedInLoad\n                            \n                            \n                        \n                    \n                \n                \n                    \nonLinkedInLoad()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:41\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/providers/linkedin-login-provider.ts:67\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        initialize()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadScript\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadScript(obj: LoginProviderClass, onload: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:11\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        obj\n                                                        \n                                                                    LoginProviderClass\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        onload\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signIn()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Abstract\n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        signOut()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     BaseLoginProvider\n\n                                \n                            \n                        \n                            \n                                    Defined in BaseLoginProvider:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseLoginProvider } from '../entities/base-login-provider';\nimport { SocialUser, LoginProviderClass, LinkedInResponse } from '../entities/user';\n\ndeclare let IN: any;\n\nexport class LinkedinLoginProvider extends BaseLoginProvider {\n  public isInitialize: boolean;\n  public static readonly PROVIDER_ID = 'LINKEDIN';\n  public loginProviderObj: LoginProviderClass = new LoginProviderClass();\n\n  constructor(private clientId: string) {\n    super();\n    this.loginProviderObj.id = clientId;\n    this.loginProviderObj.name = 'LINKEDIN';\n    this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';\n  }\n\n  initialize(): Promise {\n    return new Promise((resolve, reject) => {\n      this.loadScript(this.loginProviderObj, () => {\n        IN.init({\n          api_key: this.clientId,\n          authorize: true,\n          onLoad: this.onLinkedInLoad()\n        });\n        this.isInitialize = true;\n        IN.Event.on(IN, 'auth', () => {\n          if (IN.User.isAuthorized()) {\n            IN.API.Raw(\n              '/people/~:(id,first-name,last-name,email-address,picture-url)'\n            ).result((res: LinkedInResponse) => {\n              resolve(this.drawUser(res));\n            });\n          }\n        });\n\n      });\n    });\n  }\n\n  onLinkedInLoad() {\n    IN.Event.on(IN, 'systemReady', () => {\n      IN.User.refresh();\n    });\n  }\n\n  drawUser(response: LinkedInResponse): SocialUser {\n    let user: SocialUser = new SocialUser();\n    user.id = response.emailAddress;\n    user.name = response.firstName + ' ' + response.lastName;\n    user.email = response.emailAddress;\n    user.photoUrl = response.pictureUrl;\n    user.token = IN.ENV.auth.oauth_token;\n    return user;\n  }\n\n  signIn(): Promise {\n    return new Promise((resolve, reject) => {\n      IN.User.authorize(() => {\n        IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result((res: LinkedInResponse) => {\n          resolve(this.drawUser(res));\n        });\n      });\n    });\n  }\n\n  signOut(): Promise {\n    return new Promise((resolve, reject) => {\n      IN.User.logout((response: any) => {\n        resolve();\n      }, (err: any) => {\n        reject(err);\n      });\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginProvider.html":{"url":"interfaces/LoginProvider.html","title":"interface - LoginProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/login-provider.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isInitialize\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    initialize\n                                \n                                \n                                    signIn\n                                \n                                \n                                    signOut\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialize\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitialize()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:5\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/entities/login-provider.ts:7\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isInitialize\n                                    \n                                \n                                \n                                    \n                                        isInitialize:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { SocialUser } from './user';\n\nexport interface LoginProvider {\n  isInitialize: boolean;\n  initialize(): Promise;\n  signIn(): Promise;\n  signOut(): Promise;\n}\n\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginProviderClass.html":{"url":"classes/LoginProviderClass.html","title":"class - LoginProviderClass","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginProviderClass\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SocialLoginModule.html":{"url":"modules/SocialLoginModule.html","title":"module - SocialLoginModule","body":"\n                   \n\n\n\n\n  Modules\n  SocialLoginModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SocialLoginModule\n\n\n\ncluster_SocialLoginModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nSocialLoginModule\n\nSocialLoginModule\n\nSocialLoginModule -->\n\nAuthService->SocialLoginModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     AuthService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    AuthService\n  ]\n})\n\nexport class SocialLoginModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialUser.html":{"url":"classes/SocialUser.html","title":"class - SocialUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entities/user.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                photoUrl\n                            \n                            \n                                provider\n                            \n                            \n                                    Optional\n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            photoUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        photoUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            provider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        provider:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        token:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/entities/user.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SocialUser {\n  provider: string;\n  id: string;\n  email: string;\n  name: string;\n  photoUrl: string;\n  token?: string;\n}\n\nexport class LoginProviderClass {\n  name: string;\n  id: string;\n  url: string;\n}\n\nexport class LinkedInResponse {\n  emailAddress: string;\n  firstName: string;\n  id: string;\n  lastName: string;\n  pictureUrl: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/auth.service.ts\n            \n            \n                class\n            \n            \n                AuthServiceConfig\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/auth.service.ts\n            \n            \n                interface\n            \n            \n                AuthServiceConfigItem\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/entities/base-login-provider.ts\n            \n            \n                class\n            \n            \n                BaseLoginProvider\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/entities/login-provider.ts\n            \n            \n                interface\n            \n            \n                LoginProvider\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/entities/user.ts\n            \n            \n                class\n            \n            \n                LinkedInResponse\n            \n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/entities/user.ts\n            \n            \n                class\n            \n            \n                LoginProviderClass\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/entities/user.ts\n            \n            \n                class\n            \n            \n                SocialUser\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/providers/facebook-login-provider.ts\n            \n            \n                class\n            \n            \n                FacebookLoginProvider\n            \n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/providers/facebook-login-provider.ts\n            \n            \n                variable\n            \n            \n                FB\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/google-login-provider.ts\n            \n            \n                class\n            \n            \n                GoogleLoginProvider\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/providers/google-login-provider.ts\n            \n            \n                variable\n            \n            \n                gapi\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/providers/linkedin-login-provider.ts\n            \n            \n                class\n            \n            \n                LinkedinLoginProvider\n            \n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/providers/linkedin-login-provider.ts\n            \n            \n                variable\n            \n            \n                IN\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nng4 Social Login\nThis is the refrenced library from angular4-social-login.\nSocial login and authentication module for Angular 4. \nSupports authentication with Google, Linkedin and Facebook.\nGetting started\nDocumentation\ncheck out Docs\nInstall via npm\nnpm install --save ng4-social-loginImport the module\nIn your AppModule, import the SocialLoginModule\nimport {\n  SocialLoginModule, \n  AuthServiceConfig,\n  GoogleLoginProvider, \n  FacebookLoginProvider, \n  LinkedinLoginProvider\n} from 'ng4-social-login';\n\n/** \n * config takes two params\n * 1. Provider config array\n * 2. Boolean to auto logged\n */\nconst CONFIG = new AuthServiceConfig([\n  {\n    id: GoogleLoginProvider.PROVIDER_ID,\n    provider: new GoogleLoginProvider('Google-OAuth-Client-Id')\n  },\n  {\n    id: FacebookLoginProvider.PROVIDER_ID,\n    provider: new FacebookLoginProvider('Facebook-App-Id')\n  },\n  {\n    id: LinkedinLoginProvider.PROVIDER_ID,\n    provider: new LinkedinLoginProvider('LINKEDIN_CLIENT_ID')\n  }\n], true);\n\nexport function provideConfig() {\n  return CONFIG;\n}\n\n@NgModule({\n  declarations: [\n    ...\n  ],\n  imports: [\n    ...\n    SocialLoginModule\n  ],\n  providers: [\n    {\n      provide: AuthServiceConfig,\n      useFactory: provideConfig\n    }\n  ],\n  bootstrap: [...]\n})\nexport class AppModule { }Sign in and out users\nimport { \n  AuthService \n  FacebookLoginProvider, \n  GoogleLoginProvider,\n  LinkedinLoginProvider\n} from 'ng4-social-login';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  constructor(private authService: AuthService) { }\n\n  signInWithGoogle(): void {\n    this.authService.signIn(GoogleLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithFB(): void {\n    this.authService.signIn(FacebookLoginProvider.PROVIDER_ID);\n  }\n\n  signInWithLinkedIN(): void {\n    this.authService.signIn(LinkedinLoginProvider.PROVIDER_ID);\n  }\n\n  signOut(): void {\n    this.authService.signOut();\n  }\n\n}Subscribe to the authentication state\nYou are notified when user logs in or logs out. You receive a SocialUser object when the user logs in and a null when the user logs out. SocialUser object contains basic user information such as name, email, photo URL, etc.\nimport { AuthService } from 'ng4-social-login';\nimport { SocialUser } from 'ng4-social-login';\n\n@Component({\n  selector: 'app-demo',\n  templateUrl: './demo.component.html',\n  styleUrls: ['./demo.component.css']\n})\nexport class DemoComponent implements OnInit {\n\n  private user: SocialUser;\n  private loggedIn: boolean;\n\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n    this.authService.authState.subscribe((user) => {\n      this.user = user;\n      this.loggedIn = (user != null);\n    });\n  }\n\n}Display the user information\n\n\n  {{ user.name }}\n  {{ user.email }}\nBuilding with AoT\nIf you are facing issue in building your app with AoT, check this document.\nContributing to project\nyou are welcome to report an issue or creating a pull request.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        SocialLoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SocialLoginModule\n\n\n\ncluster_SocialLoginModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nSocialLoginModule\n\nSocialLoginModule\n\nSocialLoginModule -->\n\nAuthService->SocialLoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    8 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FB   (src/.../facebook-login-provider.ts)\n                        \n                        \n                            gapi   (src/.../google-login-provider.ts)\n                        \n                        \n                            IN   (src/.../linkedin-login-provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/providers/facebook-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FB:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/providers/google-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            gapi\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        gapi:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/providers/linkedin-login-provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            IN\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IN:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
